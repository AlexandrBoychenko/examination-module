{"version":3,"sources":["questions.js","helpers.js","components/Result.js","components/Modal.js","components/AnswerRadio.js","components/AnswerCheckbox.js","components/AnswerSelect.js","components/AnswerTextInput.js","components/Questions.js","components/Exam.js","index.js"],"names":["questions","id","value","items","right","component","questionsNumber","length","getLocalData","item","JSON","parse","localStorage","getItem","setLocalStorage","data","setItem","stringify","getResultArray","resultState","answersRadio","getBooleans","answersCheckbox","answersTextInput","answersSelect","concat","results","map","Array","isArray","compareTwoArrays","array01","array02","every","indexOf","Result","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","examResult","match","params","number","filter","answer","setState","react_default","a","createElement","className","onClick","e","preventDefault","window","history","back","React","Component","Modal","show","type","onSubmit","onClose","AnswerRadio","handleChangeRadio","bind","assertThisInitialized","context","onAnswerChangeRadio","target","_this2","renderInput","key","name","onChange","renderItems","AnswerCheckbox","handleChangeCheckbox","onAnswerChangeCheckbox","AnswerSelect","handleChangeSelect","onAnswerChangeSelect","AnswerTextInput","handleChangeText","toLowerCase","onAnswerChangeText","placeholder","Questions","allAreAnswered","isOpen","toggleModal","setLastId","lastId","isNaN","answers","slice","forEach","index","splice","push","elements","valueIndex","values","removePreviousAnswer","i","question","setProps","components_AnswerRadio","components_AnswerCheckbox","components_AnswerTextInput","components_AnswerSelect","returnQuestionByType","setStorage","_this3","renderQuestions","Route","render","_ref","handleAnswers","handleRoute","_ref2","components_Modal","ExamTitle","Exam","Exam_ExamTitle","components_Questions","ReactDOM","HashRouter","Switch","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.9abc0986.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: \"answer01\",\r\n        value: 'Сколько планет в солнечной системе?',\r\n        items: [7, 5, 9, 8],\r\n        right: 8,\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer02\",\r\n        value: 'Что характерно для кометы?',\r\n        items: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n            \"Состоит из газа и пыли\",\r\n            \"Существует только во внутренней области солнечной системы\",\r\n            \"Не имеет ядра\"\r\n        ],\r\n        right: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n        ],\r\n        component: \"AnswerCheckbox\",\r\n    },\r\n    {\r\n        id: \"answer03\",\r\n        value: 'Какая из планет солнечной системы имеет наибольший объем?',\r\n        items: null,\r\n        right: 'Юпитер',\r\n        component: \"AnswerTextInput\"\r\n    },\r\n    {\r\n        id: \"answer04\",\r\n        value: 'Как называется естественный спутник Земли?',\r\n        items: [\r\n            \"Ганимед\",\r\n            \"Луна\",\r\n            \"Фобос\",\r\n            \"Титан\",\r\n            \"Европа\"\r\n        ],\r\n        right: \"Луна\",\r\n        component: \"AnswerSelect\"\r\n    },\r\n    {\r\n        id: \"answer05\",\r\n        value: 'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\",' +\r\n        ' пределов солнечной системы?',\r\n        items: [\"Да\", \"Нет\"],\r\n        right: \"Да\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer06\",\r\n        value: 'Есть ли жизнь на Марсе?',\r\n        items: [\"Да\", \"Нет\", \"Неизвестно\"],\r\n        right: \"Неизвестно\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer07\",\r\n        value: 'Как называется наша галлактика?',\r\n        items: [\r\n            \"Андромеда\",\r\n            \"Сириус\",\r\n            \"Альфа Центавра\",\r\n            \"Млечный путь\"\r\n        ],\r\n        right: \"Млечный путь\",\r\n        component: \"AnswerSelect\"\r\n    }\r\n];\r\n","import questions from './questions';\r\n\r\nconst questionsNumber = questions.length;\r\n\r\nconst getLocalData = (item) => {\r\n    return JSON.parse(localStorage.getItem(item));\r\n};\r\n\r\nconst setLocalStorage = (item, data) => {\r\n    return localStorage.setItem(item, JSON.stringify(data));\r\n};\r\n\r\nconst getResultArray = (resultState) => {\r\n    let answersRadio = getBooleans(resultState.answersRadio);\r\n    let answersCheckbox = getBooleans(resultState.answersCheckbox);\r\n    let answersTextInput = getBooleans(resultState.answersTextInput);\r\n    let answersSelect = getBooleans(resultState.answersSelect);\r\n\r\n    return [].concat(answersRadio, answersCheckbox, answersTextInput, answersSelect);\r\n};\r\n\r\nconst getBooleans = (results) => {\r\n    return results.map((item) => {\r\n        if (Array.isArray(item.value)) {\r\n            return compareTwoArrays(item.value, getLocalData(item.id))\r\n        } else {\r\n            return item.value === getLocalData(item.id);\r\n        }\r\n    })\r\n};\r\n\r\nconst compareTwoArrays = (array01, array02) => {\r\n    return array01.length === array02.length && array01.every((value) =>{\r\n                return ~array02.indexOf(value);\r\n            }\r\n        )\r\n};\r\n\r\nexport {questionsNumber, getLocalData, getResultArray, setLocalStorage};","import React from 'react';\r\nimport { questionsNumber, getLocalData, getResultArray } from '../helpers';\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examResult: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const resultState = getLocalData(this.props.match.params.number);\r\n        const examResult = getResultArray(resultState).filter((answer) => {\r\n            return answer\r\n        });\r\n        this.setState({examResult: examResult.length});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-text\">\r\n                    <h3>Результат экзамена</h3>\r\n                    <div className=\"result-item\">Количество правильных ответов: {this.state.examResult}</div>\r\n                    <div className=\"result-item\">Общее количество вопросов: {questionsNumber}</div>\r\n                    <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                </div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.history.back();\r\n                    }}>\r\n                    Пройти экзамен заново\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport '../style/modal.css'\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        // Render nothing if the \"show\" prop is false\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"backdrop\">\r\n                <div className=\"modal\">\r\n                    <div className=\"modalText\">\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button type=\"button\" className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerRadio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, this.props.id);\r\n    }\r\n    \r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'radio-list';\r\n        return (\r\n            <li key={item} >\r\n                <label className=\"container\">{item}\r\n                    <input\r\n                        type=\"radio\"\r\n                        name={this.props.id}\r\n                        value={item}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <span className=\"check-mark\"></span>\r\n                </label>\r\n            </li>\r\n        );            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerRadio;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerCheckbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value, this.props.id);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'checkbox-list';\r\n        return (\r\n            <li key={item}>\r\n                <label className=\"container container-checkbox\">{item}\r\n                    <input type=\"checkbox\" name=\"answer\" value={item}\r\n                           onChange={this.handleChangeCheckbox}\r\n                    />\r\n                    <span className=\"check-mark-checkbox\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerCheckbox;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value, this.props.id)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    <option value=''>Выберите ответ</option>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerSelect;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerTextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right.toLowerCase());\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value, this.props.id)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   name=\"answer\"\r\n                   placeholder=\"Введите ваш ответ здесь\"\r\n                   onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerTextInput\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport AnswerRadio from './AnswerRadio';\r\nimport AnswerCheckbox from './AnswerCheckbox';\r\nimport AnswerSelect from './AnswerSelect';\r\nimport AnswerTextInput from './AnswerTextInput';\r\nimport questions from '../questions';\r\nimport { questionsNumber, getResultArray } from '../helpers';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allAreAnswered: false,\r\n            isOpen: false,\r\n            answersRadio: [],\r\n            answersCheckbox: [],\r\n            answersTextInput: [],\r\n            answersSelect: []\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLastId();\r\n    }\r\n\r\n    setLastId() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, id) {\r\n        if (!isNaN(value)) {\r\n            value = +value;\r\n        }\r\n\r\n        let answers = this.state.answersRadio.slice();\r\n        if (answers.length) {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    answers.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n        answers.push({id, value});\r\n        this.setState({answersRadio: answers});\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value, id) {\r\n        let answers = this.state.answersCheckbox.slice();\r\n\r\n        if (!answers.length) {\r\n            let values = [];\r\n            values.push(value);\r\n            answers.push({id, value: values});\r\n            this.setState({answersCheckbox: answers});\r\n        } else {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    let elements = item.value.slice();\r\n\r\n                    if (!~elements.indexOf(value)) {\r\n                        elements.push(value);\r\n\r\n                    } else {\r\n                        let valueIndex = elements.indexOf(value);\r\n                        elements.splice(valueIndex, 1);\r\n                    }\r\n                    answers[index].value = elements;\r\n                }\r\n            });\r\n            this.setState({answersCheckbox: answers});\r\n        }\r\n    }\r\n\r\n    onAnswerChangeText(value, id) {\r\n        let answers = this.state.answersTextInput.slice();\r\n        this.removePreviousAnswer(answers, id);\r\n        answers.push({id, value: value.toLowerCase()});\r\n        this.setState({answersTextInput: answers});\r\n    }\r\n\r\n    onAnswerChangeSelect(value, id) {\r\n        let answers = this.state.answersSelect.slice();\r\n        this.removePreviousAnswer(answers, id);\r\n        answers.push({id, value});\r\n        this.setState({answersSelect: answers});\r\n    }\r\n\r\n    removePreviousAnswer(answers, id) {\r\n        for(let i = 0; i < answers.length; i++) {\r\n            if (answers[i].id === id) {\r\n                answers.splice(0, 1);\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    setProps(question) {\r\n        return {\r\n            id: question.id,\r\n            items: question.items,\r\n            right: question.right,\r\n            context: this\r\n        }\r\n    }\r\n\r\n    returnQuestionByType(question) {\r\n        let props = this.setProps(question);\r\n        switch (question.component) {\r\n            case 'AnswerRadio':\r\n                return <AnswerRadio {...props} />;\r\n            case 'AnswerCheckbox':\r\n                return <AnswerCheckbox {...props} />;\r\n            case 'AnswerTextInput':\r\n                return <AnswerTextInput {...props} />;\r\n            case 'AnswerSelect':\r\n                return <AnswerSelect {...props} />;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    renderQuestions() {\r\n        return questions.map((item, index) => {\r\n            return (\r\n                <div key={item.id} className=\"question\">\r\n                    <h3 className=\"question-title\">Вопрос {index + 1}</h3>\r\n                    <h2>{item.value}</h2>\r\n                    <div className=\"question-body\">\r\n                        {this.returnQuestionByType(item)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    handleRoute() {\r\n        this.setStorage();\r\n        return `/result/${this.state.id}`;\r\n    };\r\n\r\n    handleAnswers() {\r\n        let results = getResultArray(this.state);\r\n        return (results.length < questionsNumber) ? this.toggleModal(): true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"questions\">\r\n                {this.renderQuestions()}\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.handleAnswers()) {\r\n                                history.push(this.handleRoute());\r\n                            }\r\n                        }}>\r\n                        Ответить\r\n                    </button>\r\n                )} />\r\n                <Route render={({history}) => (\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               history.push(this.handleRoute());\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport Questions from './Questions';\r\n\r\nconst Exam = () => {\r\n    return (\r\n        <form className=\"Exam\">\r\n            <ExamTitle/>\r\n            <Questions />\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ExamTitle = () => {\r\n    return (\r\n        <div className=\"titles\">\r\n            <h1>Экзаменационный модуль</h1>\r\n            <h2>Тема: Астрономия</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Exam;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Result from './components/Result';\r\nimport Exam from './components/Exam';\r\n\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Exam}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}