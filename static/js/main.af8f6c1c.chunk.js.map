{"version":3,"sources":["components/Result.js","components/Modal.js","components/AnswerInput.js","components/AnswerSelect.js","components/AnswerTextInput.js","components/Questions.js","index.js"],"names":["Result","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","examCount","questionsCount","resultState","getLocalData","match","params","number","examSummary","question01","localStorage","getItem","question02","compareWithRightAnswer","question03","toLowerCase","question04","question05","countResult","array01","array02","length","every","value","index","key","setState","react_default","a","createElement","className","onClick","e","preventDefault","window","history","back","React","Component","item","JSON","parse","Modal","show","type","onSubmit","onClose","AnswersInput","handleChangeRadio","bind","assertThisInitialized","handleChangeCheckbox","setItem","id","stringify","right","context","onAnswerChangeRadio","target","name","onAnswerChangeCheckbox","_this2","items","map","renderByType","onChange","renderItems","AnswersSelect","handleChangeSelect","onAnswerChangeSelect","AnswersTextInput","handleChangeText","onAnswerChangeText","placeholder","Questions","allAreAnswered","isOpen","answer01","answer02","answer03","answer04","answer05","toggleModal","lastId","newAnswers","slice","indexOf","valueIndex","splice","push","stateId","setStorage","Questions_QuestionTitle","Questions_QuestionText","AnswerInput","AnswerTextInput","AnswerSelect","Route","render","_ref","concat","_ref2","components_Modal","QuestionText","QuestionTitle","Examine","src_ExamineTitle","components_Questions","ExamineTitle","ReactDOM","HashRouter","Switch","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.af8f6c1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Result extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examCount: 0,\r\n            questionsCount: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const resultState = getLocalData(this.props.match.params.number);\r\n        let examCount = 0;\r\n        let questionsCount = 0;\r\n\r\n        let examSummary = {\r\n            question01: resultState['answer01'] === localStorage.getItem('answer01'),\r\n            question02: this.compareWithRightAnswer(resultState['answer02'], getLocalData('answer02')),\r\n            question03: resultState['answer03'].toLowerCase() === localStorage.getItem('answer03').toLowerCase(),\r\n            question04: resultState['answer04'] === localStorage.getItem('answer04'),\r\n            question05: resultState['answer05'] === getLocalData('answer05')\r\n        };\r\n    this.countResult(examSummary, questionsCount, examCount)\r\n    }\r\n\r\n    compareWithRightAnswer(array01, array02) {\r\n        return array01.length === array02.length && array01.every(\r\n                function(value, index) {\r\n                    return value === array02[index];\r\n                }\r\n            )\r\n    }\r\n\r\n    countResult(examSummary, questionsCount, examCount) {\r\n        for (let key in examSummary) {\r\n            questionsCount++;\r\n            if (examSummary[key]) {\r\n                examCount++\r\n            }\r\n        }\r\n        this.setState({questionsCount: questionsCount});\r\n        this.setState({examCount: examCount});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-text\">\r\n                    <h3>Результат экзамена</h3>\r\n                    <div className=\"result-item\">Количество правильных ответов: {this.state.examCount}</div>\r\n                    <div className=\"result-item\">Общее количество вопросов: {this.state.questionsCount}</div>\r\n                    <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                </div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.history.back();\r\n                    }}>\r\n                    Пройти экзамен заново\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getLocalData = (item) => {\r\n    return JSON.parse(localStorage.getItem(item));\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport '../style/modal.css'\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        // Render nothing if the \"show\" prop is false\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"backdrop\">\r\n                <div className=\"modal\">\r\n                    <div className=\"modalText\">\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button type=\"button\" className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nclass AnswersInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right));\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, e.target.name);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderByType(item)\r\n        });\r\n    }\r\n\r\n    renderByType(item) {\r\n        switch(this.props.type) {\r\n            case 'radio':\r\n                this.className = 'radio-list';\r\n                return (\r\n                    <li key={item} >\r\n                        <label className=\"container\">{item}\r\n                            <input\r\n                                type=\"radio\"\r\n                                name={this.props.id}\r\n                                value={item}\r\n                                onChange={this.handleChangeRadio}\r\n                            />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            case 'checkbox':\r\n                this.className = 'checkbox-list';\r\n                return (\r\n                    <li key={item}>\r\n                        <label className=\"container container-checkbox\">{item}\r\n                            <input type=\"checkbox\" name=\"answer\" value={item}\r\n                                   onChange={this.handleChangeCheckbox}\r\n                            />\r\n                            <span className=\"checkmark-checkbox\"></span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            default :\r\n                return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswersInput;\r\n","import React from 'react';\r\n\r\nclass AnswersSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.context.onAnswerChangeSelect(this.props.items[0]);\r\n        localStorage.setItem(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswersSelect;\r\n","import React from 'react';\r\n\r\nclass AnswersTextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   name=\"answer\"\r\n                   placeholder=\"Введите ваш ответ здесь\"\r\n                   onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswersTextInput\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport AnswerInput from './AnswerInput'\r\nimport AnswerSelect from './AnswerSelect'\r\nimport AnswerTextInput from './AnswerTextInput'\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allAreAnswered: false,\r\n            isOpen: false,\r\n            id: '',\r\n            answer01: '',\r\n            answer02: [],\r\n            answer03: '',\r\n            answer04: '',\r\n            answer05: ''\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, name) {\r\n        if (name === \"answer01\") {\r\n            this.setState({answer01: value});\r\n        } else {\r\n            this.setState({answer05: value});\r\n        }\r\n\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value) {\r\n        let newAnswers = this.state.answer02.slice();\r\n\r\n        if (!~this.state.answer02.indexOf(value)) {\r\n            newAnswers.push(value);\r\n            this.setState({answer02: newAnswers});\r\n        } else {\r\n            let valueIndex = newAnswers.indexOf(value);\r\n            newAnswers.splice(valueIndex, 1);\r\n            this.setState({answer02: newAnswers});\r\n        }\r\n\r\n    }\r\n\r\n    onAnswerChangeText(value) {\r\n        this.setState({answer03: value});\r\n    }\r\n\r\n    onAnswerChangeSelect(value) {\r\n        this.setState({answer04: value});\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    render() {\r\n        let stateId = this.state.id;\r\n        let setStorage = this.setStorage.bind(this);\r\n        let state = this.state;\r\n\r\n        return (\r\n            <div className=\"questions\">\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={1}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Сколько планет в солнечной системе?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswerInput\r\n                            id=\"answer01\"\r\n                            items={[7, 5, 9, 8]}\r\n                            right={8}\r\n                            type=\"radio\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={2}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Что характерно для кометы?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswerInput\r\n                            id=\"answer02\"\r\n                            items={[\r\n                                \"Имеет хвост\",\r\n                                \"Вращается вокруг солнца\",\r\n                                \"Состоит из газа и пыли\",\r\n                                \"Существует только во внутренней области солнечной системы\",\r\n                                \"Не имеет ядра\"\r\n                            ]}\r\n                            right={[\r\n                                \"Имеет хвост\",\r\n                                \"Вращается вокруг солнца\",\r\n                            ]}\r\n                            type=\"checkbox\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={3}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Какая из планет солнечной системы имеет наибольший объем?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswerTextInput\r\n                            id=\"answer03\"\r\n                            context={this}\r\n                            right=\"Юпитер\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={4}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Как называется естественный спутник Земли?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswerSelect\r\n                            id=\"answer04\"\r\n                            items={[\r\n                                \"Ганимед\",\r\n                                \"Луна\",\r\n                                \"Фобос\",\r\n                                \"Титан\",\r\n                                \"Европа\"\r\n                            ]}\r\n                            right=\"Луна\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={5}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\"' +\r\n                        ' пределов солнечной системы?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswerInput\r\n                            id=\"answer05\"\r\n                            items={[\"Да\", \"Нет\"]}\r\n                            type=\"radio\"\r\n                            right=\"Да\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n\r\n                            let allAreAnswered = true;\r\n                            for (let key in state) {\r\n                                if (!state[key]\r\n                                    && key !== \"allAreAnswered\"\r\n                                    && key !== \"isOpen\"\r\n                                ) {\r\n                                    allAreAnswered = false;\r\n                                }\r\n                            }\r\n\r\n                            if (allAreAnswered) {\r\n                                setStorage();\r\n                                history.push(`/result/${stateId}`);\r\n                            } else {\r\n                                this.toggleModal();\r\n                            }\r\n                        }}>\r\n                        Ответить\r\n                    </button>\r\n                )} />\r\n                <Route render={({history}) => (\r\n\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               setStorage();\r\n                               history.push(`/result/${stateId}`);\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst QuestionText = (props) => {\r\n    return (\r\n        <h2>{props.value}</h2>\r\n    )\r\n};\r\n\r\nconst QuestionTitle = (props) => {\r\n    return (\r\n        <h3 className=\"question-title\">Вопрос {props.value}</h3>\r\n    )\r\n};\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Result from './components/Result';\r\nimport Questions from './components/Questions';\r\n\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Examine}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nclass Examine extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"examine\">\r\n                <ExamineTitle/>\r\n                <Questions />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass ExamineTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"titles\">\r\n                <h1>Экзаменационный модуль</h1>\r\n                <h2>Тема: Астрономия</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}