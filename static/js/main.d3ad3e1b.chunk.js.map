{"version":3,"sources":["components/Modal.js","questions.js","helpers.js","components/Radio.js","components/Checkbox.js","components/Select.js","components/TextInput.js","components/Questions.js","components/ExamTitle.js","components/Exam.js","components/Result.js","index.js"],"names":["Modal","this","props","show","react_default","a","createElement","className","type","onClick","onSubmit","onClose","React","Component","questions","id","value","items","right","questionsNumber","length","getLocalData","item","JSON","parse","localStorage","getItem","setLocalStorage","data","setItem","stringify","getResultArray","resultState","Radio","Checkbox","TextInput","Select","results","concat","getBooleans","map","Array","isArray","compareTwoArrays","array01","array02","every","indexOf","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChangeRadio","bind","assertThisInitialized","e","context","onAnswerChangeRadio","target","_this2","renderInput","key","name","onChange","renderItems","handleChangeCheckbox","onAnswerChangeCheckbox","handleChangeSelect","onAnswerChangeSelect","handleChangeText","toLowerCase","onAnswerChangeText","placeholder","Questions","state","isOpen","toggleModal","setLastId","lastId","setState","isNaN","answers","slice","forEach","index","splice","push","elements","valueIndex","values","removePreviousAnswer","i","question","setProps","components_Radio","components_Checkbox","components_TextInput","components_Select","returnQuestionByType","setStorage","content","document","querySelector","reset","_this3","renderQuestions","Route","render","_ref","history","preventDefault","handleAnswers","handleRoute","clearAnswers","_ref2","components_Modal","ExamTitle","title","topic","Exam","components_ExamTitle","components_Questions","Result","examResult","match","params","number","filter","answer","window","back","ReactDOM","HashRouter","Switch","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.d3ad3e1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/modal.css'\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"backdrop\">\r\n                <div className=\"modal\">\r\n                    <div className=\"modalText\">\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button type=\"button\" className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Закрыть\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","export default [\r\n    {\r\n        id: \"question01\",\r\n        value: 'Сколько планет в солнечной системе?',\r\n        items: [7, 5, 9, 8],\r\n        right: 8,\r\n        type: \"Radio\"\r\n    },\r\n    {\r\n        id: \"question02\",\r\n        value: 'Что характерно для кометы?',\r\n        items: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n            \"Состоит из газа и пыли\",\r\n            \"Существует только во внутренней области солнечной системы\",\r\n            \"Не имеет ядра\"\r\n        ],\r\n        right: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n        ],\r\n        type: \"Checkbox\",\r\n    },\r\n    {\r\n        id: \"question03\",\r\n        value: 'Какая из планет солнечной системы имеет наибольший объем?',\r\n        items: null,\r\n        right: 'Юпитер',\r\n        type: \"TextInput\"\r\n    },\r\n    {\r\n        id: \"question04\",\r\n        value: 'Как называется естественный спутник Земли?',\r\n        items: [\r\n            \"Ганимед\",\r\n            \"Луна\",\r\n            \"Фобос\",\r\n            \"Титан\",\r\n            \"Европа\"\r\n        ],\r\n        right: \"Луна\",\r\n        type: \"Select\"\r\n    },\r\n    {\r\n        id: \"question05\",\r\n        value: 'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\",' +\r\n        ' пределов солнечной системы?',\r\n        items: [\"Да\", \"Нет\"],\r\n        right: \"Да\",\r\n        type: \"Radio\"\r\n    },\r\n    {\r\n        id: \"question06\",\r\n        value: 'Есть ли жизнь на Марсе?',\r\n        items: [\"Да\", \"Нет\", \"Неизвестно\"],\r\n        right: \"Неизвестно\",\r\n        type: \"Radio\"\r\n    },\r\n    {\r\n        id: \"question07\",\r\n        value: 'Как называется наша галлактика?',\r\n        items: [\r\n            \"Андромеда\",\r\n            \"Сириус\",\r\n            \"Альфа Центавра\",\r\n            \"Млечный путь\"\r\n        ],\r\n        right: \"Млечный путь\",\r\n        type: \"Select\"\r\n    }\r\n];\r\n","import questions from './questions';\r\n\r\nconst questionsNumber = questions.length;\r\n\r\nconst getLocalData = (item) => {\r\n    return JSON.parse(localStorage.getItem(item));\r\n};\r\n\r\nconst setLocalStorage = (item, data) => {\r\n    return localStorage.setItem(item, JSON.stringify(data));\r\n};\r\n\r\nconst getResultArray = (resultState) => {\r\n    let {Radio, Checkbox, TextInput, Select} = resultState;\r\n    let results = [].concat(Radio, Checkbox, TextInput, Select);\r\n    return getBooleans(results);\r\n};\r\n\r\nconst getBooleans = (results) => {\r\n    return results.map((item) => {\r\n        if (Array.isArray(item.value)) {\r\n            return compareTwoArrays(item.value, getLocalData(item.id))\r\n        }\r\n        return item.value === getLocalData(item.id);\r\n    })\r\n};\r\n\r\nconst compareTwoArrays = (array01, array02) => {\r\n    return array01.length === array02.length && array01.every((value) =>{\r\n                return ~array02.indexOf(value);\r\n            }\r\n        )\r\n};\r\n\r\nexport {questionsNumber, getLocalData, getResultArray, setLocalStorage};","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass Radio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, this.props.id);\r\n    }\r\n    \r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'radio-list';\r\n        return (\r\n            <li key={item} >\r\n                <label className=\"container\">{item}\r\n                    <input\r\n                        type=\"radio\"\r\n                        name={this.props.id}\r\n                        value={item}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <span className=\"check-mark\"></span>\r\n                </label>\r\n            </li>\r\n        );            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radio;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value, this.props.id);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'checkbox-list';\r\n        return (\r\n            <li key={item}>\r\n                <label className=\"container container-checkbox\">{item}\r\n                    <input type=\"checkbox\" name=\"answer\" value={item}\r\n                           onChange={this.handleChangeCheckbox}\r\n                    />\r\n                    <span className=\"check-mark-checkbox\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value, this.props.id)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    <option value=''>Выберите ответ</option>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass TextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right.toLowerCase());\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value, this.props.id)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   name=\"answer\"\r\n                   placeholder=\"Введите ваш ответ здесь\"\r\n                   onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextInput\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport Radio from './Radio';\r\nimport Checkbox from './Checkbox';\r\nimport Select from './Select';\r\nimport TextInput from './TextInput';\r\nimport questions from '../questions';\r\nimport { questionsNumber, getResultArray } from '../helpers';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            isOpen: false,\r\n            Radio: [],\r\n            Checkbox: [],\r\n            TextInput: [],\r\n            Select: []\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLastId();\r\n    }\r\n\r\n    setLastId() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, id) {\r\n        if (!isNaN(value)) {\r\n            value = +value;\r\n        }\r\n\r\n        let answers = this.state.Radio.slice();\r\n        if (answers.length) {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    answers.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n        answers.push({id, value});\r\n        this.setState({Radio: answers});\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value, id) {\r\n        let answers = this.state.Checkbox.slice();\r\n\r\n        if (!answers.length) {\r\n            let values = [];\r\n            values.push(value);\r\n            answers.push({id, value: values});\r\n            this.setState({Checkbox: answers});\r\n        } else {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    let elements = item.value.slice();\r\n\r\n                    if (!~elements.indexOf(value)) {\r\n                        elements.push(value);\r\n\r\n                    } else {\r\n                        let valueIndex = elements.indexOf(value);\r\n                        elements.splice(valueIndex, 1);\r\n                    }\r\n                    answers[index].value = elements;\r\n                }\r\n            });\r\n            this.setState({Checkbox: answers});\r\n        }\r\n    }\r\n\r\n    onAnswerChangeText(value, id) {\r\n        let answers = this.state.TextInput.slice();\r\n        this.removePreviousAnswer(answers, id);\r\n        answers.push({id, value: value.toLowerCase()});\r\n        this.setState({TextInput: answers});\r\n    }\r\n\r\n    onAnswerChangeSelect(value, id) {\r\n        let answers = this.state.Select.slice();\r\n        this.removePreviousAnswer(answers, id);\r\n        answers.push({id, value});\r\n        this.setState({Select: answers});\r\n    }\r\n\r\n    removePreviousAnswer(answers, id) {\r\n        for(let i = 0; i < answers.length; i++) {\r\n            if (answers[i].id === id) {\r\n                answers.splice(0, 1);\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    setProps(question) {\r\n        return {\r\n            id: question.id,\r\n            items: question.items,\r\n            right: question.right,\r\n            context: this\r\n        }\r\n    }\r\n\r\n    returnQuestionByType(question) {\r\n        let props = this.setProps(question);\r\n        switch (question.type) {\r\n            case 'Radio':\r\n                return <Radio {...props} />;\r\n            case 'Checkbox':\r\n                return <Checkbox {...props} />;\r\n            case 'TextInput':\r\n                return <TextInput {...props} />;\r\n            case 'Select':\r\n                return <Select {...props} />;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    renderQuestions() {\r\n        return questions.map((item, index) => {\r\n            return (\r\n                <div key={item.id} className=\"question\">\r\n                    <h3 className=\"question-title\">Вопрос {index + 1}</h3>\r\n                    <h2>{item.value}</h2>\r\n                    <div className=\"question-body\">\r\n                        {this.returnQuestionByType(item)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    handleRoute() {\r\n        this.setStorage();\r\n        return `/result/${this.state.id}`;\r\n    };\r\n\r\n    handleAnswers() {\r\n        let results = getResultArray(this.state);\r\n        return (results.length < questionsNumber) ? this.toggleModal(): true;\r\n    }\r\n\r\n    clearAnswers() {\r\n        let content = this.state;\r\n\r\n        for (let key in content) {\r\n            if (Array.isArray(content[key])) {\r\n                content[key] = [];\r\n            }\r\n        }\r\n        this.setState({content});\r\n\r\n        document.querySelector('.Exam').reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"questions\">\r\n                {this.renderQuestions()}\r\n                <div className=\"buttons\">\r\n                    <Route render={({history}) => (\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                if (this.handleAnswers()) {\r\n                                    history.push(this.handleRoute());\r\n                                }\r\n                            }}>\r\n                            Ответить\r\n                        </button>\r\n                    )} />\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.clearAnswers();\r\n                        }}>\r\n                        Очистить\r\n                    </button>\r\n                </div>\r\n                <Route render={({history}) => (\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               history.push(this.handleRoute());\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\n\r\nconst ExamTitle = (props) => {\r\n    return (\r\n        <div className=\"titles\">\r\n            <h1>{props.title}</h1>\r\n            <h2>Тема: {props.topic}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ExamTitle;","import React from 'react';\r\nimport Questions from './Questions';\r\nimport ExamTitle from './ExamTitle'\r\n\r\nconst Exam = () => {\r\n    return (\r\n        <div className=\"exam-wrapper\">\r\n            <form className=\"Exam\">\r\n                <ExamTitle\r\n                    title=\"Экзаменационный модуль\"\r\n                    topic=\"Астрономия\"\r\n                />\r\n                <Questions />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Exam;\r\n","import React from 'react';\r\nimport ExamTitle from './ExamTitle';\r\nimport { questionsNumber, getLocalData, getResultArray } from '../helpers';\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examResult: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const resultState = getLocalData(this.props.match.params.number);\r\n        const examResult = getResultArray(resultState).filter((answer) => {\r\n            return answer\r\n        });\r\n        this.setState({examResult: examResult.length});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result-wrapper\">\r\n                <ExamTitle\r\n                    title=\"Результат экзамена\"\r\n                    topic=\"Астрономия\"\r\n                />\r\n                <div className=\"questions\">\r\n                    <div className=\"question result-section\">\r\n                        <div className=\"question-body\">\r\n                            <div className=\"result-item\">Количество правильных ответов: {this.state.examResult}</div>\r\n                            <div className=\"result-item\">Общее количество вопросов: {questionsNumber}</div>\r\n                            <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-result\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                window.history.back();\r\n                            }}>\r\n                            Пройти экзамен заново\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Exam from './components/Exam';\r\nimport Result from './components/Result';\r\n\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Exam}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}