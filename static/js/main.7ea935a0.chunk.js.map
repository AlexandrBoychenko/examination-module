{"version":3,"sources":["modal.js","index.js"],"names":["Modal","this","props","show","react_default","a","createElement","className","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","maxWidth","margin","children","minHeight","paddingTop","onClick","onSubmit","onClose","React","Component","Examine","action","src_ExamineTitle","value","mainTitle","theme","src_Questions","Result","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","examCount","questionsCount","resultState","JSON","parse","localStorage","getItem","match","params","number","examSummary","question01","question02","compareWithRightAnswer","question03","question04","question05","key","setState","array01","array02","length","every","index","Route","render","_ref","history","e","preventDefault","push","ExamineTitle","Questions","_this2","allAreAnswered","isOpen","id","answer01","answer02","answer03","answer04","answer05","toggleModal","bind","assertThisInitialized","lastId","setItem","name","newAnswers","slice","indexOf","valueIndex","splice","stringify","_this3","stateId","setStorage","src_QuestionTitle","src_QuestionText","src_AnswersInput","items","type","context","src_AnswersTexInput","src_AnswersSelect","_ref2","concat","_ref3","modal","AnswersSelect","_this4","handleChangeSelect","onAnswerChangeSelect","target","map","item","onChange","renderItems","AnswersInput","_this5","handleChangeRadio","handleChangeCheckbox","onAnswerChangeRadio","onAnswerChangeCheckbox","_this6","renderByType","AnswersTexInput","_this7","handleChangeText","onAnswerChangeText","placeholder","QuestionText","QuestionTitle","ReactDOM","HashRouter","Switch","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.7ea935a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        // Render nothing if the \"show\" prop is false\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        // The gray background\r\n        const backdropStyle = {\r\n            position: 'fixed',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n            padding: '10%'\r\n        };\r\n\r\n        // The modal \"window\"\r\n        const modalStyle = {\r\n            backgroundColor: '#fff',\r\n            borderRadius: 5,\r\n            maxWidth: 500,\r\n            margin: '0 auto',\r\n            padding: 30\r\n        };\r\n\r\n        const modalText = {\r\n            minHeight: '100px',\r\n            paddingTop: '5%'\r\n        };\r\n\r\n        return (\r\n            <div className=\"backdrop\" style={backdropStyle}>\r\n                <div className=\"modal\" style={modalStyle}>\r\n                    {this.props.children}\r\n\r\n                    <div className=\"modalText\" style={modalText}>\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    show: PropTypes.bool,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from './modal';\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Examine}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nclass Examine extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <form action=\"\" className=\"examine\">\r\n                    <ExamineTitle\r\n                        value={{\r\n                            mainTitle: 'Экзаменационный модуль',\r\n                            theme: 'Тема: Астрономия'\r\n                        }}\r\n                    />\r\n                    <Questions />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Result extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examCount: 0,\r\n            questionsCount: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let resultState = JSON.parse(localStorage.getItem(this.props.match.params.number));\r\n        let examCount = 0;\r\n        let questionsCount = 0;\r\n\r\n        let examSummary = {\r\n            question01: resultState['answer01'] === localStorage.getItem('answer01'),\r\n            question02: this.compareWithRightAnswer(resultState['answer02'], JSON.parse(localStorage.getItem('answer02'))),\r\n            question03: resultState['answer03'] === localStorage.getItem('answer03'),\r\n            question04: resultState['answer04'] === localStorage.getItem('answer04'),\r\n            question05: resultState['answer05'] === JSON.parse(localStorage.getItem('answer05'))\r\n        };\r\n\r\n        for (let key in examSummary) {\r\n            questionsCount++;\r\n            if (examSummary[key]) {\r\n                examCount++\r\n             }\r\n        }\r\n        this.setState({questionsCount: questionsCount});\r\n        this.setState({examCount: examCount});\r\n    }\r\n\r\n    compareWithRightAnswer(array01, array02) {\r\n        return array01.length === array02.length && array01.every(\r\n            function(value, index) {\r\n                return value === array02[index];\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-text\">\r\n                    <h3>Результат экзамена</h3>\r\n                    <div className=\"result-item\">Количество правильных ответов: {this.state.examCount}</div>\r\n                    <div className=\"result-item\">Общее количество вопросов: {this.state.questionsCount}</div>\r\n                    <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                </div>\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            history.push(`/`);\r\n                        }}>\r\n                        Пройти экзамен заново\r\n                    </button>\r\n                )}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nclass ExamineTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"titles\">\r\n                <h1>{this.props.value.mainTitle}</h1>\r\n                <h2>{this.props.value.theme}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allAreAnswered: false,\r\n            isOpen: false,\r\n            id: '',\r\n            answer01: '',\r\n            answer02: [],\r\n            answer03: '',\r\n            answer04: '',\r\n            answer05: ''\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, name, right) {\r\n        if (name === \"answer01\") {\r\n            this.setState({answer01: value});\r\n        } else {\r\n            this.setState({answer05: value});\r\n        }\r\n\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value, right) {\r\n        let newAnswers = this.state.answer02.slice();\r\n\r\n        if (!~this.state.answer02.indexOf(value)) {\r\n            newAnswers.push(value);\r\n            this.setState({answer02: newAnswers});\r\n        } else {\r\n            let valueIndex = newAnswers.indexOf(value);\r\n            newAnswers.splice(valueIndex, 1);\r\n            this.setState({answer02: newAnswers});\r\n        }\r\n\r\n    }\r\n\r\n    onAnswerChangeText(value) {\r\n        this.setState({answer03: value});\r\n    }\r\n\r\n    onAnswerChangeSelect(value) {\r\n        this.setState({answer04: value});\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    render() {\r\n        let stateId = this.state.id;\r\n        let setStorage = this.setStorage.bind(this);\r\n        let state = this.state;\r\n\r\n        return (\r\n            <div className=\"questions\">\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={1}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Сколько планет в солнечной системе?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswersInput\r\n                                id=\"answer01\"\r\n                                items={[7, 5, 9, 8]}\r\n                                right={8}\r\n                                type=\"radio\"\r\n                                context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={2}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Что характерно для кометы?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswersInput\r\n                                id=\"answer02\"\r\n                                items={[\r\n                                    \"Имеет хвост\",\r\n                                    \"Вращается вокруг солнца\",\r\n                                    \"Состоит из газа и пыли\",\r\n                                    \"Существует только во внутренней области солнечной системы\",\r\n                                    \"Не имеет ядра\"\r\n                                ]}\r\n                                right={[\r\n                                    \"Имеет хвост\",\r\n                                    \"Вращается вокруг солнца\",\r\n                                ]}\r\n                                type=\"checkbox\"\r\n                                context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={3}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Какая из планет солнечной системы имеет наибольший объем?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswersTexInput\r\n                            id=\"answer03\"\r\n                            context={this}\r\n                            right=\"Юпитер\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={4}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Как называется естественный спутник Земли?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswersSelect\r\n                            id=\"answer04\"\r\n                            items={[\r\n                                \"Ганимед\",\r\n                                \"Луна\",\r\n                                \"Фобос\",\r\n                                \"Титан\",\r\n                                \"Европа\"\r\n                            ]}\r\n                            right=\"Луна\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <QuestionTitle\r\n                        value={5}\r\n                    />\r\n                    <QuestionText\r\n                        value={'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\"' +\r\n                        ' пределов солнечной системы?'}\r\n                    />\r\n                    <div className=\"question-body\">\r\n                        <AnswersInput\r\n                            id=\"answer05\"\r\n                            items={[\"Да\", \"Нет\"]}\r\n                            type=\"radio\"\r\n                            right=\"Да\"\r\n                            context={this}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                                e.preventDefault();\r\n\r\n                                let allAreAnswered = true;\r\n                                for (let key in state) {\r\n                                    if (!state[key]\r\n                                        && key !== \"allAreAnswered\"\r\n                                        && key !== \"isOpen\"\r\n                                    ) {\r\n                                        allAreAnswered = false;\r\n                                    }\r\n                                }\r\n\r\n                                if (allAreAnswered) {\r\n                                    setStorage();\r\n                                    history.push(`/result/${stateId}`);\r\n                                } else {\r\n                                    this.toggleModal();\r\n                                }\r\n                        }}>\r\n                        Ответить\r\n                    </button>\r\n                )} />\r\n                <Route render={({history}) => (\r\n\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               setStorage();\r\n                               history.push(`/result/${stateId}`);\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AnswersSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.context.onAnswerChangeSelect(this.props.items[0]);\r\n        localStorage.setItem(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AnswersInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right));\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, e.target.name);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderByType(item)\r\n        });\r\n    }\r\n\r\n    renderByType(item) {\r\n        switch(this.props.type) {\r\n            case 'radio':\r\n                this.className = 'radio-list';\r\n                return (\r\n                    <li key={item} >\r\n                        <label className=\"container\">{item}\r\n                            <input\r\n                                type=\"radio\"\r\n                                name={this.props.id}\r\n                                value={item}\r\n                                onChange={this.handleChangeRadio}\r\n                            />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            case 'checkbox':\r\n                this.className = 'checkbox-list';\r\n                return (\r\n                    <li key={item}>\r\n                        <label className=\"container container-checkbox\">{item}\r\n                            <input type=\"checkbox\" name=\"answer\" value={item}\r\n                                onChange={this.handleChangeCheckbox}\r\n                            />\r\n                            <span className=\"checkmark-checkbox\"></span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            default :\r\n                return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nclass AnswersTexInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                name=\"answer\"\r\n                placeholder=\"Введите ваш ответ здесь\"\r\n                onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nclass QuestionText extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2>{this.props.value}</h2>\r\n        )\r\n    }\r\n}\r\n\r\nclass QuestionTitle extends React.Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"question-title\">Вопрос {this.props.value}</h3>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}