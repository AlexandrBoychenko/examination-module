{"version":3,"sources":["questions.js","components/Result.js","components/Modal.js","components/AnswerRadio.js","components/AnswerCheckbox.js","components/AnswerSelect.js","components/AnswerTextInput.js","components/Questions.js","index.js"],"names":["questions","id","value","items","right","component","Result","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","examResult","resultState","getLocalData","match","params","number","answersRadio","checkSingleValue","answersCheckbox","compareCheckboxes","answersTextInput","answersSelect","examSummary","concat","countResult","results","map","item","_this2","compareTwoArrays","array01","array02","length","every","indexOf","forEach","answer","setState","react_default","a","createElement","className","onClick","e","preventDefault","window","history","back","React","Component","JSON","parse","localStorage","getItem","Modal","show","type","onSubmit","onClose","AnswerRadio","handleChangeRadio","bind","assertThisInitialized","setItem","stringify","context","onAnswerChangeRadio","target","renderInput","key","name","onChange","renderItems","AnswerCheckbox","handleChangeCheckbox","onAnswerChangeCheckbox","AnswerSelect","handleChangeSelect","onAnswerChangeSelect","AnswerTextInput","handleChangeText","toLowerCase","onAnswerChangeText","placeholder","Questions","allAreAnswered","isOpen","toggleModal","lastId","isNaN","answers","slice","index","splice","push","elements","valueIndex","values","question","setProps","components_AnswerRadio","components_AnswerCheckbox","components_AnswerTextInput","components_AnswerSelect","returnQuestionByType","_this3","stateId","setStorage","renderQuestions","Route","render","_ref","_ref2","components_Modal","Examine","src_ExamineTitle","components_Questions","ExamineTitle","ReactDOM","HashRouter","Switch","exact","path","document","getElementById"],"mappings":"0UAAeA,EAAA,CACX,CACIC,GAAI,WACJC,MAAO,4LACPC,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBC,MAAO,EACPC,UAAW,eAEf,CACIJ,GAAI,WACJC,MAAO,2IACPC,MAAO,CACH,gEACA,mIACA,mHACA,2TACA,wEAEJC,MAAO,CACH,gEACA,oIAEJC,UAAW,kBAEf,CACIJ,GAAI,WACJC,MAAO,iTACPC,MAAO,KACPC,MAAO,uCACPC,UAAW,mBAEf,CACIJ,GAAI,WACJC,MAAO,sOACPC,MAAO,CACH,6CACA,2BACA,iCACA,iCACA,wCAEJC,MAAO,2BACPC,UAAW,gBAEf,CACIJ,GAAI,WACJC,MAAO,ijBAEPC,MAAO,CAAC,eAAM,sBACdC,MAAO,eACPC,UAAW,eAEf,CACIJ,GAAI,WACJC,MAAO,oHACPC,MAAO,CAAC,eAAM,qBAAO,gEACrBC,MAAO,+DACPC,UAAW,eAEf,CACIJ,GAAI,WACJC,MAAO,yKACPC,MAAO,CACH,sEACA,yDACA,uCACA,mFAEJC,MAAO,sEACPC,UAAW,iBClEbC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,WAAY,GAHDR,mFAOf,IAAMS,EAAcC,EAAaP,KAAKJ,MAAMY,MAAMC,OAAOC,QAErDC,EAAeX,KAAKY,iBAAiBN,EAAYK,cACjDE,EAAkBb,KAAKc,kBAAkBR,EAAYO,iBACrDE,EAAmBf,KAAKY,iBAAiBN,EAAYS,kBACrDC,EAAgBhB,KAAKY,iBAAiBN,EAAYU,eAElDC,EAAc,GAAGC,OAAOP,EAAcE,EAAiBE,EAAkBC,GAC7EhB,KAAKmB,YAAYF,4CAGJG,GACb,OAAOA,EAAQC,IAAI,SAACC,GAChB,OAAOA,EAAK/B,QAAUgB,EAAae,EAAKhC,gDAI9B8B,GAAS,IAAAG,EAAAvB,KACvB,OAAOoB,EAAQC,IAAI,SAACC,GAChB,OAAOC,EAAKC,iBAAiBF,EAAK/B,MAAOgB,EAAae,EAAKhC,gDAIlDmC,EAASC,GACtB,OAAOD,EAAQE,SAAWD,EAAQC,QAAUF,EAAQG,MAAM,SAACrC,GAC/C,OAAQmC,EAAQG,QAAQtC,yCAK5B0B,GACR,IAAIZ,EAAa,EACjBY,EAAYa,QAAQ,SAACC,GACbA,GACA1B,MAGRL,KAAKgC,SAAS,CAAC3B,gDAIf,OACI4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,qHACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,yKAA6DpC,KAAKI,MAAMC,YACxE4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,iJAAyD/C,EAAUsC,QACnEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gGAAgDpC,KAAKJ,MAAMY,MAAMC,OAAOC,SAE5EuB,EAAAC,EAAAC,cAAA,UACIC,UAAU,MACVC,QAAS,SAACC,GACNA,EAAEC,iBACFC,OAAOC,QAAQC,SAJvB,gIAzDKC,IAAMC,WAsErBrC,EAAe,SAACe,GAClB,OAAOuB,KAAKC,MAAMC,aAAaC,QAAQ1B,KAG5B3B,WC/CAsD,0LAxBP,OAAIjD,KAAKJ,MAAMsD,KAKXjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,gcAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,SAASf,UAAU,iBAAiBC,QAASrC,KAAKJ,MAAMwD,UAArE,MAGAnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,QAASrC,KAAKJ,MAAMyD,SAAvD,YAbL,YAJCV,IAAMC,YC6CXU,cA7CX,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACfzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KACD2D,kBAAoB1D,EAAK0D,kBAAkBC,KAAvB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAFVA,mFAMfkD,aAAaW,QAAQ1D,KAAKJ,MAAMN,GAAIuD,KAAKc,UAAU3D,KAAKJ,MAAMH,kDAGhD6C,GACdtC,KAAKJ,MAAMgE,QAAQC,oBAAoBvB,EAAEwB,OAAOvE,MAAOS,KAAKJ,MAAMN,0CAGxD,IAAAiC,EAAAvB,KACV,OAAOA,KAAKJ,MAAMJ,MAAM6B,IAAI,SAACC,GACzB,OAAOC,EAAKwC,YAAYzC,yCAIpBA,GAER,OADAtB,KAAKoC,UAAY,aAEbH,EAAAC,EAAAC,cAAA,MAAI6B,IAAK1C,GACLW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAad,EAC1BW,EAAAC,EAAAC,cAAA,SACIgB,KAAK,QACLc,KAAMjE,KAAKJ,MAAMN,GACjBC,MAAO+B,EACP4C,SAAUlE,KAAKuD,oBAEnBtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kDAO5B,OACIH,EAAAC,EAAAC,cAAA,MAAIC,UAAWpC,KAAKoC,WACfpC,KAAKmE,sBAxCIxB,IAAMC,WC2CjBwB,cA1CX,SAAAA,EAAYxE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACfvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMJ,KACDyE,qBAAuBxE,EAAKwE,qBAAqBb,KAA1B1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAFbA,mFAMfkD,aAAaW,QAAQ1D,KAAKJ,MAAMN,GAAIuD,KAAKc,UAAU3D,KAAKJ,MAAMH,qDAG7C6C,GACjBtC,KAAKJ,MAAMgE,QAAQU,uBAAuBhC,EAAEwB,OAAOvE,MAAOS,KAAKJ,MAAMN,0CAG3D,IAAAiC,EAAAvB,KACV,OAAOA,KAAKJ,MAAMJ,MAAM6B,IAAI,SAACC,GACzB,OAAOC,EAAKwC,YAAYzC,yCAIpBA,GAER,OADAtB,KAAKoC,UAAY,gBAEbH,EAAAC,EAAAC,cAAA,MAAI6B,IAAK1C,GACLW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCAAgCd,EAC7CW,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,WAAWc,KAAK,SAAS1E,MAAO+B,EACrC4C,SAAUlE,KAAKqE,uBAEtBpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2DAO5B,OACIH,EAAAC,EAAAC,cAAA,MAAIC,UAAWpC,KAAKoC,WACfpC,KAAKmE,sBArCOxB,IAAMC,WCgCpB2B,cA/BX,SAAAA,EAAY3E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACf1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KACD4E,mBAAqB3E,EAAK2E,mBAAmBhB,KAAxB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAFXA,mFAMfG,KAAKJ,MAAMgE,QAAQa,qBAAqBzE,KAAKJ,MAAMJ,MAAM,GAAIQ,KAAKJ,MAAMN,IACxEyD,aAAaW,QAAQ1D,KAAKJ,MAAMN,GAAIuD,KAAKc,UAAU3D,KAAKJ,MAAMH,mDAG/C6C,GACftC,KAAKJ,MAAMgE,QAAQa,qBAAqBnC,EAAEwB,OAAOvE,MAAOS,KAAKJ,MAAMN,0CAInE,OAAOU,KAAKJ,MAAMJ,MAAM6B,IAAI,SAACC,GACzB,OAAOW,EAAAC,EAAAC,cAAA,UAAQ6B,IAAK1C,EAAM/B,MAAO+B,GAAOA,sCAK5C,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQ+B,SAAUlE,KAAKwE,oBAClBxE,KAAKmE,uBAzBCxB,IAAMC,WCyBlB8B,cAxBX,SAAAA,EAAY9E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACf7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KACD+E,iBAAmB9E,EAAK8E,iBAAiBnB,KAAtB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAFTA,mFAMfkD,aAAaW,QAAQ1D,KAAKJ,MAAMN,GAAIuD,KAAKc,UAAU3D,KAAKJ,MAAMH,MAAMmF,yDAGvDtC,GACbtC,KAAKJ,MAAMgE,QAAQiB,mBAAmBvC,EAAEwB,OAAOvE,MAAOS,KAAKJ,MAAMN,qCAIjE,OACI2C,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OACLc,KAAK,SACLa,YAAY,8HACZZ,SAAUlE,KAAK2E,0BAnBJhC,IAAMC,mBCiMrBmC,cAzLX,SAAAA,EAAYnF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACflF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4E,gBAAgB,EAChBC,QAAQ,EACRtE,aAAc,GACdE,gBAAiB,GACjBE,iBAAkB,GAClBC,cAAe,IAEnBnB,EAAKqF,YAAcrF,EAAKqF,YAAY1B,KAAjB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAVJA,mFAcf,IAAIsF,EAASpC,aAAaC,QAAQ,UAC9BmC,GACAnF,KAAKgC,SAAS,CAAC1C,IAAK6F,EAAS,IAC7BpC,aAAaW,QAAQ,UAAWyB,EAAS,KAEzCnF,KAAKgC,SAAS,CAAC1C,GAAI,IACnByD,aAAaW,QAAQ,SAAU,gDAInBnE,EAAOD,GAClB8F,MAAM7F,KACPA,GAASA,GAGb,IAAI8F,EAAUrF,KAAKI,MAAMO,aAAa2E,QAClCD,EAAQ1D,QACR0D,EAAQvD,QAAQ,SAACR,EAAMiE,GACfjE,EAAKhC,KAAOA,GACZ+F,EAAQG,OAAOD,EAAO,KAIlCF,EAAQI,KAAK,CAACnG,KAAIC,UAClBS,KAAKgC,SAAS,CAACrB,aAAc0E,mDAGV9F,EAAOD,GAC1B,IAAI+F,EAAUrF,KAAKI,MAAMS,gBAAgByE,QAEzC,GAAKD,EAAQ1D,OAMT0D,EAAQvD,QAAQ,SAACR,EAAMiE,GACnB,GAAIjE,EAAKhC,KAAOA,EAAI,CAChB,IAAIoG,EAAWpE,EAAK/B,MAAM+F,QAE1B,IAAMI,EAAS7D,QAAQtC,GAGhB,CACH,IAAIoG,EAAaD,EAAS7D,QAAQtC,GAClCmG,EAASF,OAAOG,EAAY,QAJ5BD,EAASD,KAAKlG,GAMlB8F,EAAQE,GAAOhG,MAAQmG,KAG/B1F,KAAKgC,SAAS,CAACnB,gBAAiBwE,QApBf,CACjB,IAAIO,EAAS,GACbA,EAAOH,KAAKlG,GACZ8F,EAAQI,KAAK,CAACnG,KAAIC,MAAOqG,IACzB5F,KAAKgC,SAAS,CAACnB,gBAAiBwE,gDAoBrB9F,EAAOD,GACtB,IAAI+F,EAAUrF,KAAKI,MAAMW,iBAAiBuE,QAC1CD,EAAQI,KAAK,CAACnG,KAAIC,UAClBS,KAAKgC,SAAS,CAACjB,iBAAkBsE,iDAGhB9F,EAAOD,GACxB,IAAI+F,EAAUrF,KAAKI,MAAMY,cAAcsE,QACvCD,EAAQI,KAAK,CAACnG,KAAIC,UAElB8F,EAAQvD,QAAQ,SAACC,EAAQwD,GACjBF,IAAUE,IAAUxD,EAAOzC,KAAO+F,EAAQE,GAAOjG,IACjD+F,EAAQG,SAASD,EAAO,KAGhCvF,KAAKgC,SAAS,CAAChB,cAAeqE,0CAI9BrF,KAAKgC,SAAS,CACViD,QAASjF,KAAKI,MAAM6E,8CAKxBlC,aAAaW,QAAQ1D,KAAKI,MAAMd,GAAIuD,KAAKc,UAAU3D,KAAKI,yCAGnDyF,GACL,MAAO,CACH7B,IAAK6B,EAASvG,GACdA,GAAIuG,EAASvG,GACbE,MAAOqG,EAASrG,MAChBC,MAAOoG,EAASpG,MAChBmE,QAAS5D,mDAII6F,GACjB,IAAIjG,EAAQI,KAAK8F,SAASD,GAC1B,OAAQA,EAASnG,WACb,IAAK,cACD,OAAOuC,EAAAC,EAAAC,cAAC4D,EAAgBnG,GAC5B,IAAK,iBACD,OAAOqC,EAAAC,EAAAC,cAAC6D,EAAmBpG,GAC/B,IAAK,kBACD,OAAOqC,EAAAC,EAAAC,cAAC8D,EAAoBrG,GAChC,IAAK,eACD,OAAOqC,EAAAC,EAAAC,cAAC+D,EAAiBtG,GAC7B,QACI,kDAIM,IAAA2B,EAAAvB,KACd,OAAOX,EAAUgC,IAAI,SAACC,EAAMiE,GACxB,OACItD,EAAAC,EAAAC,cAAA,OAAK6B,IAAK1C,EAAKhC,GAAI8C,UAAU,YACzBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,wCAAuCmD,EAAQ,GAC/CtD,EAAAC,EAAAC,cAAA,UAAKb,EAAK/B,OACV0C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVb,EAAK4E,qBAAqB7E,wCAOtC,IAAA8E,EAAApG,KACDqG,EAAUrG,KAAKI,MAAMd,GACrBgH,EAAatG,KAAKsG,WAAW9C,KAAKxD,MAClCI,EAAQJ,KAAKI,MAEjB,OACI6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVpC,KAAKuG,kBACNtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAQ,SAAAC,GAAA,IAAEjE,EAAFiE,EAAEjE,QAAF,OACXR,EAAAC,EAAAC,cAAA,UACIC,UAAU,MACVC,QAAS,SAACC,GACNA,EAAEC,iBAEF,IAAIyC,GAAiB,EACrB,IAAK,IAAIhB,KAAO5D,EACPA,EAAM4D,IACI,mBAARA,GACQ,WAARA,IAEHgB,GAAiB,GAIrBA,GACAsB,IACA7D,EAAQgD,KAAR,WAAAvE,OAAwBmF,KAExBD,EAAKlB,gBAnBjB,uDAyBJjD,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAQ,SAAAE,GAAA,IAAElE,EAAFkE,EAAElE,QAAF,OAEXR,EAAAC,EAAAC,cAACyE,EAAD,CAAO1D,KAAMkD,EAAKhG,MAAM6E,OACjB5B,QAAS+C,EAAKlB,YACd9B,SAAU,WACNkD,IACA7D,EAAQgD,KAAR,WAAAvE,OAAwBmF,kBAjL/B1D,IAAMC,2BCYxBiE,kNAGE,OACI5E,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACZH,EAAAC,EAAAC,cAAC2E,EAAD,MACA7E,EAAAC,EAAAC,cAAC4E,EAAD,cANMpE,IAAMC,YAYtBoE,mLAGE,OACI/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,6IACAF,EAAAC,EAAAC,cAAA,4GANWQ,IAAMC,WAYjCqE,IAASR,OACLxE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACIjF,EAAAC,EAAAC,cAjCI,kBACRF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,IAAI3H,UAAWmH,IACjC5E,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOa,KAAK,kBAAkB3H,UAAWC,MA8BzC,OAED2H,SAASC,eAAe","file":"static/js/main.deb61cad.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: \"answer01\",\r\n        value: 'Сколько планет в солнечной системе?',\r\n        items: [7, 5, 9, 8],\r\n        right: 8,\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer02\",\r\n        value: 'Что характерно для кометы?',\r\n        items: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n            \"Состоит из газа и пыли\",\r\n            \"Существует только во внутренней области солнечной системы\",\r\n            \"Не имеет ядра\"\r\n        ],\r\n        right: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n        ],\r\n        component: \"AnswerCheckbox\",\r\n    },\r\n    {\r\n        id: \"answer03\",\r\n        value: 'Какая из планет солнечной системы имеет наибольший объем?',\r\n        items: null,\r\n        right: 'Юпитер',\r\n        component: \"AnswerTextInput\"\r\n    },\r\n    {\r\n        id: \"answer04\",\r\n        value: 'Как называется естественный спутник Земли?',\r\n        items: [\r\n            \"Ганимед\",\r\n            \"Луна\",\r\n            \"Фобос\",\r\n            \"Титан\",\r\n            \"Европа\"\r\n        ],\r\n        right: \"Луна\",\r\n        component: \"AnswerSelect\"\r\n    },\r\n    {\r\n        id: \"answer05\",\r\n        value: 'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\",' +\r\n        ' пределов солнечной системы?',\r\n        items: [\"Да\", \"Нет\"],\r\n        right: \"Да\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer06\",\r\n        value: 'Есть ли жизнь на Марсе?',\r\n        items: [\"Да\", \"Нет\", \"Неизвестно\"],\r\n        right: \"Неизвестно\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer07\",\r\n        value: 'Как называется наша галлактика?',\r\n        items: [\r\n            \"Млечный путь\",\r\n            \"Андромеда\",\r\n            \"Сириус\",\r\n            \"Альфа Центавра\"\r\n        ],\r\n        right: \"Млечный путь\",\r\n        component: \"AnswerSelect\"\r\n    }\r\n];\r\n","import React from 'react';\r\nimport questions from '../questions';\r\n\r\nclass Result extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examResult: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const resultState = getLocalData(this.props.match.params.number);\r\n\r\n        let answersRadio = this.checkSingleValue(resultState.answersRadio);\r\n        let answersCheckbox = this.compareCheckboxes(resultState.answersCheckbox);\r\n        let answersTextInput = this.checkSingleValue(resultState.answersTextInput);\r\n        let answersSelect = this.checkSingleValue(resultState.answersSelect);\r\n\r\n        let examSummary = [].concat(answersRadio, answersCheckbox, answersTextInput, answersSelect);\r\n        this.countResult(examSummary)\r\n    }\r\n\r\n    checkSingleValue(results) {\r\n        return results.map((item) => {\r\n            return item.value === getLocalData(item.id);\r\n        })\r\n    }\r\n\r\n    compareCheckboxes(results) {\r\n        return results.map((item) => {\r\n            return this.compareTwoArrays(item.value, getLocalData(item.id));\r\n        })\r\n    }\r\n\r\n    compareTwoArrays(array01, array02) {\r\n        return array01.length === array02.length && array01.every((value) =>{\r\n                    return ~array02.indexOf(value);\r\n                }\r\n            )\r\n    }\r\n\r\n    countResult(examSummary) {\r\n        let examResult = 0;\r\n        examSummary.forEach((answer) => {\r\n            if (answer) {\r\n                examResult++\r\n            }\r\n        });\r\n        this.setState({examResult});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-text\">\r\n                    <h3>Результат экзамена</h3>\r\n                    <div className=\"result-item\">Количество правильных ответов: {this.state.examResult}</div>\r\n                    <div className=\"result-item\">Общее количество вопросов: {questions.length}</div>\r\n                    <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                </div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.history.back();\r\n                    }}>\r\n                    Пройти экзамен заново\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getLocalData = (item) => {\r\n    return JSON.parse(localStorage.getItem(item));\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport '../style/modal.css'\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        // Render nothing if the \"show\" prop is false\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"backdrop\">\r\n                <div className=\"modal\">\r\n                    <div className=\"modalText\">\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button type=\"button\" className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nclass AnswerRadio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right));\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, this.props.id);\r\n    }\r\n    \r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'radio-list';\r\n        return (\r\n            <li key={item} >\r\n                <label className=\"container\">{item}\r\n                    <input\r\n                        type=\"radio\"\r\n                        name={this.props.id}\r\n                        value={item}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <span className=\"check-mark\"></span>\r\n                </label>\r\n            </li>\r\n        );            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerRadio;\r\n","import React from 'react';\r\n\r\nclass AnswerCheckbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right));\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value, this.props.id);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'checkbox-list';\r\n        return (\r\n            <li key={item}>\r\n                <label className=\"container container-checkbox\">{item}\r\n                    <input type=\"checkbox\" name=\"answer\" value={item}\r\n                           onChange={this.handleChangeCheckbox}\r\n                    />\r\n                    <span className=\"check-mark-checkbox\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerCheckbox;\r\n","import React from 'react';\r\n\r\nclass AnswerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.context.onAnswerChangeSelect(this.props.items[0], this.props.id);\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right));\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value, this.props.id)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerSelect;\r\n","import React from 'react';\r\n\r\nclass AnswerTextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem(this.props.id, JSON.stringify(this.props.right.toLowerCase()));\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value, this.props.id)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   name=\"answer\"\r\n                   placeholder=\"Введите ваш ответ здесь\"\r\n                   onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerTextInput\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport AnswerRadio from './AnswerRadio';\r\nimport AnswerCheckbox from './AnswerCheckbox';\r\nimport AnswerSelect from './AnswerSelect';\r\nimport AnswerTextInput from './AnswerTextInput';\r\nimport questions from '../questions';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allAreAnswered: false,\r\n            isOpen: false,\r\n            answersRadio: [],\r\n            answersCheckbox: [],\r\n            answersTextInput: [],\r\n            answersSelect: []\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, id) {\r\n        if (!isNaN(value)) {\r\n            value = +value;\r\n        }\r\n\r\n        let answers = this.state.answersRadio.slice();\r\n        if (answers.length) {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    answers.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n        answers.push({id, value});\r\n        this.setState({answersRadio: answers});\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value, id) {\r\n        let answers = this.state.answersCheckbox.slice();\r\n\r\n        if (!answers.length) {\r\n            let values = [];\r\n            values.push(value);\r\n            answers.push({id, value: values});\r\n            this.setState({answersCheckbox: answers});\r\n        } else {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    let elements = item.value.slice();\r\n\r\n                    if (!~elements.indexOf(value)) {\r\n                        elements.push(value);\r\n\r\n                    } else {\r\n                        let valueIndex = elements.indexOf(value);\r\n                        elements.splice(valueIndex, 1);\r\n                    }\r\n                    answers[index].value = elements;\r\n                }\r\n            });\r\n            this.setState({answersCheckbox: answers});\r\n        }\r\n    }\r\n\r\n    onAnswerChangeText(value, id) {\r\n        let answers = this.state.answersTextInput.slice();\r\n        answers.push({id, value});\r\n        this.setState({answersTextInput: answers});\r\n    }\r\n\r\n    onAnswerChangeSelect(value, id) {\r\n        let answers = this.state.answersSelect.slice();\r\n        answers.push({id, value});\r\n\r\n        answers.forEach((answer, index) => {\r\n            if (answers[++index] && answer.id === answers[index].id) {\r\n                answers.splice(--index, 1);\r\n            }\r\n        });\r\n        this.setState({answersSelect: answers});\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    setProps(question) {\r\n        return {\r\n            key: question.id,\r\n            id: question.id,\r\n            items: question.items,\r\n            right: question.right,\r\n            context: this\r\n        }\r\n    }\r\n\r\n    returnQuestionByType(question) {\r\n        let props = this.setProps(question);\r\n        switch (question.component) {\r\n            case 'AnswerRadio':\r\n                return <AnswerRadio {...props} />;\r\n            case 'AnswerCheckbox':\r\n                return <AnswerCheckbox {...props} />;\r\n            case 'AnswerTextInput':\r\n                return <AnswerTextInput {...props} />;\r\n            case 'AnswerSelect':\r\n                return <AnswerSelect {...props} />;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    renderQuestions() {\r\n        return questions.map((item, index) => {\r\n            return (\r\n                <div key={item.id} className=\"question\">\r\n                    <h3 className=\"question-title\">Вопрос {index + 1}</h3>\r\n                    <h2>{item.value}</h2>\r\n                    <div className=\"question-body\">\r\n                        {this.returnQuestionByType(item)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let stateId = this.state.id;\r\n        let setStorage = this.setStorage.bind(this);\r\n        let state = this.state;\r\n\r\n        return (\r\n            <div className=\"questions\">\r\n                {this.renderQuestions()}\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n\r\n                            let allAreAnswered = true;\r\n                            for (let key in state) {\r\n                                if (!state[key]\r\n                                    && key !== \"allAreAnswered\"\r\n                                    && key !== \"isOpen\"\r\n                                ) {\r\n                                    allAreAnswered = false;\r\n                                }\r\n                            }\r\n\r\n                            if (allAreAnswered) {\r\n                                setStorage();\r\n                                history.push(`/result/${stateId}`);\r\n                            } else {\r\n                                this.toggleModal();\r\n                            }\r\n                        }}>\r\n                        Ответить\r\n                    </button>\r\n                )} />\r\n                <Route render={({history}) => (\r\n\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               setStorage();\r\n                               history.push(`/result/${stateId}`);\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Result from './components/Result';\r\nimport Questions from './components/Questions';\r\n\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Examine}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nclass Examine extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"examine\">\r\n                <ExamineTitle/>\r\n                <Questions />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass ExamineTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"titles\">\r\n                <h1>Экзаменационный модуль</h1>\r\n                <h2>Тема: Астрономия</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}