{"version":3,"sources":["questions.js","helpers.js","components/Result.js","components/Modal.js","components/AnswerRadio.js","components/AnswerCheckbox.js","components/AnswerSelect.js","components/AnswerTextInput.js","components/Questions.js","components/Exam.js","index.js"],"names":["questions","id","value","items","right","component","questionsNumber","length","getLocalData","item","JSON","parse","localStorage","getItem","setLocalStorage","data","setItem","stringify","getResultArray","resultState","answersRadio","getRightAnswer","answersCheckbox","getRightCheckboxes","answersTextInput","answersSelect","concat","results","filter","compareTwoArrays","array01","array02","every","indexOf","Result","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","examResult","match","params","number","setState","react_default","a","createElement","className","onClick","e","preventDefault","window","history","back","React","Component","Modal","show","type","onSubmit","onClose","AnswerRadio","handleChangeRadio","bind","assertThisInitialized","context","onAnswerChangeRadio","target","_this2","map","renderInput","key","name","onChange","renderItems","AnswerCheckbox","handleChangeCheckbox","onAnswerChangeCheckbox","AnswerSelect","handleChangeSelect","onAnswerChangeSelect","AnswerTextInput","handleChangeText","toLowerCase","onAnswerChangeText","placeholder","Questions","allAreAnswered","isOpen","toggleModal","setLastId","lastId","isNaN","answers","slice","forEach","index","splice","push","elements","valueIndex","values","answer","question","setProps","components_AnswerRadio","components_AnswerCheckbox","components_AnswerTextInput","components_AnswerSelect","returnQuestionByType","setStorage","_this3","renderQuestions","Route","render","_ref","handleAnswers","handleRoute","_ref2","components_Modal","ExamTitle","Exam","Exam_ExamTitle","components_Questions","ReactDOM","HashRouter","Switch","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.c09e4381.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: \"answer01\",\r\n        value: 'Сколько планет в солнечной системе?',\r\n        items: [7, 5, 9, 8],\r\n        right: 8,\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer02\",\r\n        value: 'Что характерно для кометы?',\r\n        items: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n            \"Состоит из газа и пыли\",\r\n            \"Существует только во внутренней области солнечной системы\",\r\n            \"Не имеет ядра\"\r\n        ],\r\n        right: [\r\n            \"Имеет хвост\",\r\n            \"Вращается вокруг солнца\",\r\n        ],\r\n        component: \"AnswerCheckbox\",\r\n    },\r\n    {\r\n        id: \"answer03\",\r\n        value: 'Какая из планет солнечной системы имеет наибольший объем?',\r\n        items: null,\r\n        right: 'Юпитер',\r\n        component: \"AnswerTextInput\"\r\n    },\r\n    {\r\n        id: \"answer04\",\r\n        value: 'Как называется естественный спутник Земли?',\r\n        items: [\r\n            \"Ганимед\",\r\n            \"Луна\",\r\n            \"Фобос\",\r\n            \"Титан\",\r\n            \"Европа\"\r\n        ],\r\n        right: \"Луна\",\r\n        component: \"AnswerSelect\"\r\n    },\r\n    {\r\n        id: \"answer05\",\r\n        value: 'Достигнул ли к настоящему моменту космический аппарат Voyager-2, сконструированный \"NASA\",' +\r\n        ' пределов солнечной системы?',\r\n        items: [\"Да\", \"Нет\"],\r\n        right: \"Да\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer06\",\r\n        value: 'Есть ли жизнь на Марсе?',\r\n        items: [\"Да\", \"Нет\", \"Неизвестно\"],\r\n        right: \"Неизвестно\",\r\n        component: \"AnswerRadio\"\r\n    },\r\n    {\r\n        id: \"answer07\",\r\n        value: 'Как называется наша галлактика?',\r\n        items: [\r\n            \"Андромеда\",\r\n            \"Сириус\",\r\n            \"Альфа Центавра\",\r\n            \"Млечный путь\"\r\n        ],\r\n        right: \"Млечный путь\",\r\n        component: \"AnswerSelect\"\r\n    }\r\n];\r\n","import questions from './questions';\r\n\r\nconst questionsNumber = questions.length;\r\n\r\nconst getLocalData = (item) => {\r\n    return JSON.parse(localStorage.getItem(item));\r\n};\r\n\r\nconst setLocalStorage = (item, data) => {\r\n    return localStorage.setItem(item, JSON.stringify(data));\r\n};\r\n\r\nconst getResultArray = (resultState) => {\r\n    let answersRadio = getRightAnswer(resultState.answersRadio);\r\n    let answersCheckbox = getRightCheckboxes(resultState.answersCheckbox);\r\n    let answersTextInput = getRightAnswer(resultState.answersTextInput);\r\n    let answersSelect = getRightAnswer(resultState.answersSelect);\r\n\r\n    return [].concat(answersRadio, answersCheckbox, answersTextInput, answersSelect);\r\n};\r\n\r\nconst getRightAnswer = (results) => {\r\n    return results.filter((item) => {\r\n        return item.value === getLocalData(item.id);\r\n    })\r\n};\r\n\r\nconst getRightCheckboxes = (results) => {\r\n    return results.filter((item) => {\r\n        return compareTwoArrays(item.value, getLocalData(item.id));\r\n    })\r\n};\r\n\r\nconst compareTwoArrays = (array01, array02) => {\r\n    return array01.length === array02.length && array01.every((value) =>{\r\n                return ~array02.indexOf(value);\r\n            }\r\n        )\r\n};\r\n\r\nexport {questionsNumber, getLocalData, getResultArray, setLocalStorage};","import React from 'react';\r\nimport { questionsNumber, getLocalData, getResultArray } from '../helpers';\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            examResult: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const resultState = getLocalData(this.props.match.params.number);\r\n        const examResult = getResultArray(resultState).length;\r\n        this.setState({examResult});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-text\">\r\n                    <h3>Результат экзамена</h3>\r\n                    <div className=\"result-item\">Количество правильных ответов: {this.state.examResult}</div>\r\n                    <div className=\"result-item\">Общее количество вопросов: {questionsNumber}</div>\r\n                    <div className=\"result-item\">Номер результата: {this.props.match.params.number}</div>\r\n                </div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.history.back();\r\n                    }}>\r\n                    Пройти экзамен заново\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport '../style/modal.css'\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        // Render nothing if the \"show\" prop is false\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"backdrop\">\r\n                <div className=\"modal\">\r\n                    <div className=\"modalText\">\r\n                        Каждый не отвеченный ответ считается неправильным, Вы уверены что хотите продолжить?\r\n                    </div>\r\n                    <div className=\"btn-footer\">\r\n                        <button type=\"button\" className=\"btn btn-inline\" onClick={this.props.onSubmit}>\r\n                            Ok\r\n                        </button>\r\n                        <button className=\"btn btn-inline\" onClick={this.props.onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerRadio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.props.context.onAnswerChangeRadio(e.target.value, this.props.id);\r\n    }\r\n    \r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'radio-list';\r\n        return (\r\n            <li key={item} >\r\n                <label className=\"container\">{item}\r\n                    <input\r\n                        type=\"radio\"\r\n                        name={this.props.id}\r\n                        value={item}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <span className=\"check-mark\"></span>\r\n                </label>\r\n            </li>\r\n        );            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerRadio;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerCheckbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.props.context.onAnswerChangeCheckbox(e.target.value, this.props.id);\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return this.renderInput(item)\r\n        });\r\n    }\r\n\r\n    renderInput(item) {\r\n        this.className = 'checkbox-list';\r\n        return (\r\n            <li key={item}>\r\n                <label className=\"container container-checkbox\">{item}\r\n                    <input type=\"checkbox\" name=\"answer\" value={item}\r\n                           onChange={this.handleChangeCheckbox}\r\n                    />\r\n                    <span className=\"check-mark-checkbox\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={this.className}>\r\n                {this.renderItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerCheckbox;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.context.onAnswerChangeSelect(this.props.items[0], this.props.id);\r\n        setLocalStorage(this.props.id, this.props.right);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.context.onAnswerChangeSelect(e.target.value, this.props.id)\r\n    }\r\n\r\n    renderItems() {\r\n        return this.props.items.map((item) => {\r\n            return <option key={item} value={item}>{item}</option>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-style\">\r\n                <select onChange={this.handleChangeSelect}>\r\n                    {this.renderItems()}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerSelect;\r\n","import React from 'react';\r\nimport { setLocalStorage } from '../helpers'\r\n\r\nclass AnswerTextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setLocalStorage(this.props.id, this.props.right.toLowerCase());\r\n    }\r\n\r\n    handleChangeText(e) {\r\n        this.props.context.onAnswerChangeText(e.target.value, this.props.id)\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   name=\"answer\"\r\n                   placeholder=\"Введите ваш ответ здесь\"\r\n                   onChange={this.handleChangeText}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswerTextInput\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport AnswerRadio from './AnswerRadio';\r\nimport AnswerCheckbox from './AnswerCheckbox';\r\nimport AnswerSelect from './AnswerSelect';\r\nimport AnswerTextInput from './AnswerTextInput';\r\nimport questions from '../questions';\r\nimport { questionsNumber, getResultArray } from '../helpers';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass Questions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allAreAnswered: false,\r\n            isOpen: false,\r\n            answersRadio: [],\r\n            answersCheckbox: [],\r\n            answersTextInput: [],\r\n            answersSelect: []\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLastId();\r\n    }\r\n\r\n    setLastId() {\r\n        let lastId = localStorage.getItem('lastId');\r\n        if (lastId) {\r\n            this.setState({id: +lastId + 1});\r\n            localStorage.setItem('lastId', +lastId + 1);\r\n        } else {\r\n            this.setState({id: 1});\r\n            localStorage.setItem('lastId', 1);\r\n        }\r\n    }\r\n\r\n    onAnswerChangeRadio(value, id) {\r\n        if (!isNaN(value)) {\r\n            value = +value;\r\n        }\r\n\r\n        let answers = this.state.answersRadio.slice();\r\n        if (answers.length) {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    answers.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n        answers.push({id, value});\r\n        this.setState({answersRadio: answers});\r\n    }\r\n\r\n    onAnswerChangeCheckbox(value, id) {\r\n        let answers = this.state.answersCheckbox.slice();\r\n\r\n        if (!answers.length) {\r\n            let values = [];\r\n            values.push(value);\r\n            answers.push({id, value: values});\r\n            this.setState({answersCheckbox: answers});\r\n        } else {\r\n            answers.forEach((item, index) => {\r\n                if (item.id === id) {\r\n                    let elements = item.value.slice();\r\n\r\n                    if (!~elements.indexOf(value)) {\r\n                        elements.push(value);\r\n\r\n                    } else {\r\n                        let valueIndex = elements.indexOf(value);\r\n                        elements.splice(valueIndex, 1);\r\n                    }\r\n                    answers[index].value = elements;\r\n                }\r\n            });\r\n            this.setState({answersCheckbox: answers});\r\n        }\r\n    }\r\n\r\n    onAnswerChangeText(value, id) {\r\n        let answers = this.state.answersTextInput.slice();\r\n        answers.push({id, value: value.toLowerCase()});\r\n        this.setState({answersTextInput: answers});\r\n    }\r\n\r\n    onAnswerChangeSelect(value, id) {\r\n        let answers = this.state.answersSelect.slice();\r\n        answers.push({id, value});\r\n\r\n        answers.forEach((answer, index) => {\r\n            if (answers[++index] && answer.id === answers[index].id) {\r\n                answers.splice(--index, 1);\r\n            }\r\n        });\r\n        this.setState({answersSelect: answers});\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    };\r\n\r\n    setStorage() {\r\n        localStorage.setItem(this.state.id, JSON.stringify(this.state));\r\n    }\r\n\r\n    setProps(question) {\r\n        return {\r\n            key: question.id,\r\n            id: question.id,\r\n            items: question.items,\r\n            right: question.right,\r\n            context: this\r\n        }\r\n    }\r\n\r\n    returnQuestionByType(question) {\r\n        let props = this.setProps(question);\r\n        switch (question.component) {\r\n            case 'AnswerRadio':\r\n                return <AnswerRadio {...props} />;\r\n            case 'AnswerCheckbox':\r\n                return <AnswerCheckbox {...props} />;\r\n            case 'AnswerTextInput':\r\n                return <AnswerTextInput {...props} />;\r\n            case 'AnswerSelect':\r\n                return <AnswerSelect {...props} />;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    renderQuestions() {\r\n        return questions.map((item, index) => {\r\n            return (\r\n                <div key={item.id} className=\"question\">\r\n                    <h3 className=\"question-title\">Вопрос {index + 1}</h3>\r\n                    <h2>{item.value}</h2>\r\n                    <div className=\"question-body\">\r\n                        {this.returnQuestionByType(item)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    handleRoute() {\r\n        this.setStorage();\r\n        return `/result/${this.state.id}`;\r\n    };\r\n\r\n    handleAnswers() {\r\n        let results = getResultArray(this.state);\r\n        return (results.length < questionsNumber) ? this.toggleModal(): true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"questions\">\r\n                {this.renderQuestions()}\r\n                <Route render={({history}) => (\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.handleAnswers()) {\r\n                                history.push(this.handleRoute());\r\n                            }\r\n                        }}>\r\n                        Ответить\r\n                    </button>\r\n                )} />\r\n                <Route render={({history}) => (\r\n\r\n                    <Modal show={this.state.isOpen}\r\n                           onClose={this.toggleModal}\r\n                           onSubmit={() => {\r\n                               history.push(this.handleRoute());\r\n                           }}>\r\n                    </Modal>\r\n                )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport Questions from './Questions';\r\n\r\nconst Exam = () => {\r\n    return (\r\n        <form className=\"Exam\">\r\n            <ExamTitle/>\r\n            <Questions />\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ExamTitle = () => {\r\n    return (\r\n        <div className=\"titles\">\r\n            <h1>Экзаменационный модуль</h1>\r\n            <h2>Тема: Астрономия</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Exam;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Result from './components/Result';\r\nimport Exam from './components/Exam';\r\n\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './style/index.css';\r\nimport './style/default.css';\r\nimport './style/radio.css';\r\nimport './style/checkboxes.css';\r\nimport './style/select.css';\r\n\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <Route exact path='/' component={Exam}/>\r\n        <Route path='/result/:number' component={Result}/>\r\n    </Switch>\r\n);\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n"],"sourceRoot":""}